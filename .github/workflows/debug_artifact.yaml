name: debug_artifact
on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  BUILD_ACCOUNT_EMAIL: ${{ secrets.BUILD_ACCOUNT }}
  OPERATION_ACCOUNT_EMAIL: ${{ secrets.OPERATION_ACCOUNT }}
  WORKLOAD_IDENTITY_PROVIDER_NAME: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

  ARTIFACT_REPO: ${{ secrets.ARTIFACT_REPO }}

  ROOT_PATH_IAC_APPLICATION: ./terraform/application
  IMAGE_SUFFIX_API: api
  IMAGE_SUFFIX_WEB: web

jobs:
  debug_artifact:
    name: "Debug Artifact Registry"
    timeout-minutes: 5
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          service_account: ${{ env.BUILD_ACCOUNT_EMAIL }}
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER_NAME }}'

      - name: check existing images
        shell: bash
        run: |
          gcloud artifacts docker images list ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ inputs.IMAGE_SUFFIX_API }} --include-tags
          gcloud artifacts docker images list ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ inputs.IMAGE_SUFFIX_WEB }} --include-tags
      # run: |
      #   LATEST_IMAGE=$(gcloud artifacts docker images list ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }} --include-tags --filter="tags[]=latest" --format="text(IMAGE)")
      #   if [ -n "$LATEST_IMAGE" ]; then
      #     echo "Latest image found. Tagging..."
      #     gcloud artifacts docker tags add \
      #     ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ inputs.image_suffix }}:latest \
      #     ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ inputs.image_suffix }}:backup \
      #     --quiet
      #   else
      #     echo "No latest image found."
      #   fi
